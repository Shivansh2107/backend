// index.js
import express from "express";
import jwt from "jsonwebtoken";
import bodyParser from "body-parser";

const app = express();
app.use(bodyParser.json());

const SECRET_KEY = "mysecretkey"; // Use environment variable in production

// ---- Mock User Database ----
const users = [
  { id: 1, username: "admin", password: "admin123", role: "Admin" },
  { id: 2, username: "mod", password: "mod123", role: "Moderator" },
  { id: 3, username: "user", password: "user123", role: "User" },
];

// ---- Login Route ----
app.post("/login", (req, res) => {
  const { username, password } = req.body;

  const user = users.find(
    (u) => u.username === username && u.password === password
  );
  if (!user) {
    return res.status(401).json({ message: "Invalid credentials" });
  }

  // Create JWT token with role info
  const token = jwt.sign(
    { id: user.id, username: user.username, role: user.role },
    SECRET_KEY,
    { expiresIn: "1h" }
  );

  res.json({ message: "Login successful", token });
});

// ---- Middleware: Verify JWT ----
function verifyToken(req, res, next) {
  const authHeader = req.headers["authorization"];
  if (!authHeader)
    return res.status(403).json({ message: "No token provided" });

  const token = authHeader.split(" ")[1];
  jwt.verify(token, SECRET_KEY, (err, decoded) => {
    if (err) return res.status(401).json({ message: "Invalid token" });
    req.user = decoded;
    next();
  });
}

// ---- Middleware: Role Authorization ----
function authorizeRoles(...roles) {
  return (req, res, next) => {
    if (!roles.includes(req.user.role)) {
      return res
        .status(403)
        .json({ message: "Access denied: Insufficient permissions" });
    }
    next();
  };
}

// ---- Protected Routes ----
app.get("/admin", verifyToken, authorizeRoles("Admin"), (req, res) => {
  res.json({ message: `Welcome Admin ${req.user.username}` });
});

app.get(
  "/moderator",
  verifyToken,
  authorizeRoles("Admin", "Moderator"),
  (req, res) => {
    res.json({ message: `Welcome Moderator ${req.user.username}` });
  }
);

app.get("/user", verifyToken, authorizeRoles("User", "Admin", "Moderator"), (req, res) => {
  res.json({ message: `Welcome User ${req.user.username}` });
});

// ---- Start Server ----
app.listen(5000, () => console.log("Server running on http://localhost:5000"));
